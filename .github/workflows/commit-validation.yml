name: Commit Message and Email Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  COMMIT_MSG_PATTERN: "AB#[0-9]+"
  EMAIL_PATTERN: "^[a-zA-Z0-9._%+-]+@(wisetime\\.com|wisetime\\.ninja|anaqua\\.com)$"
  IGNORED_BOT_EMAILS: "renovate-bot-sh[bot]@users.noreply.github.com,dependabot[bot]@users.noreply.github.com"

jobs:
  validate-commits:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit messages and emails
        run: |
          
          # Get the range of commits to check
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, check commits from base to head
            COMMIT_RANGE="${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}"
          else
            # For push events, check the last commit
            COMMIT_RANGE="${{ github.event.before }}..${{ github.event.after }}"
          fi
          
          echo "Checking commits in range: $COMMIT_RANGE"
          
          # Get commits in the range
          COMMITS=$(git rev-list "$COMMIT_RANGE" 2>/dev/null || echo "")
          
          if [ -z "$COMMITS" ]; then
            echo "No commits to validate"
            exit 0
          fi
          
          VALIDATION_FAILED=false
          
          for commit in $COMMITS; do
            # Get commit info
            COMMIT_MSG=$(git log --format=%s -n 1 "$commit")
            COMMIT_EMAIL=$(git log --format=%ae -n 1 "$commit")
            COMMIT_SHORT=$(git rev-parse --short "$commit")
            
            # Check if this is a bot commit that should be ignored
            IS_BOT_COMMIT=false
            IFS=',' read -ra BOT_EMAILS <<< "$IGNORED_BOT_EMAILS"
            for bot_email in "${BOT_EMAILS[@]}"; do
              if [[ "$COMMIT_EMAIL" == *"$bot_email"* ]]; then
                IS_BOT_COMMIT=true
                break
              fi
            done
            
            if [ "$IS_BOT_COMMIT" = true ]; then
              echo "⏭️  Skipping bot commit $COMMIT_SHORT (email: $COMMIT_EMAIL)"
              continue
            fi
            
            # Check if this is a merge commit that should be ignored
            if [[ "$COMMIT_MSG" =~ ^Merge(\ remote-tracking)?\ branch\ .*\ into\ .* ]]; then
              echo "⏭️  Skipping merge commit $COMMIT_SHORT"
              continue
            fi
            
            echo "Validating commit $COMMIT_SHORT"
            echo "  Message: $COMMIT_MSG"
            echo "  Email: $COMMIT_EMAIL"
            
            # Validate commit message format
            if ! echo "$COMMIT_MSG" | grep -qE "$COMMIT_MSG_PATTERN"; then
              echo "❌ Invalid commit message format in $COMMIT_SHORT"
              echo "   Expected format: must include ticket reference AB#[number]"
              echo "   Example: AB#12345 fix user authentication bug"
              VALIDATION_FAILED=true
            else
              echo "✅ Commit message format is valid"
            fi
            
            # Validate email format
            if ! echo "$COMMIT_EMAIL" | grep -qE "$EMAIL_PATTERN"; then
              echo "❌ Invalid email domain in $COMMIT_SHORT: $COMMIT_EMAIL"
              echo "   Expected domains: wisetime.com, wisetime.ninja, or anaqua.com"
              VALIDATION_FAILED=true
            else
              echo "✅ Email format is valid"
            fi
            
            echo ""
          done
          
          if [ "$VALIDATION_FAILED" = true ]; then
            echo "💥 Commit validation failed!"
            echo ""
            echo "Please ensure all commits include a ticket reference:"
            echo "  AB#[number] description"
            echo ""
            echo "Examples:"
            echo "  AB#12345 add user authentication functionality"
            echo "  AB#67890 fix null pointer exception in API"
            echo "  AB#54321 update installation documentation"
            echo ""
            echo "Commiter's email must be from domains: wisetime.com, wisetime.ninja, or anaqua.com"
            exit 1
          else
            echo "✅ All commits passed validation!"
          fi
